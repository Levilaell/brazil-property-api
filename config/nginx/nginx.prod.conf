# Nginx Configuration for Brazil Property API - Production

worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format with additional security info
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'cc="$sent_http_cache_control" cs=$upstream_cache_status';

    access_log /var/log/nginx/access.log main;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 16M;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=search:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=health:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=analytics:10m rate=1r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Upstream servers with health checks
    upstream api_backend {
        least_conn;
        server api:8000 max_fails=3 fail_timeout=30s weight=1;
        # Add more servers for horizontal scaling
        # server api-2:8000 max_fails=3 fail_timeout=30s weight=1;
        # server api-3:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # HTTP Server (redirects to HTTPS)
    server {
        listen 80;
        server_name brazil-property-api.com www.brazil-property-api.com;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS Server
    server {
        listen 443 ssl http2;
        server_name brazil-property-api.com www.brazil-property-api.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Connection limiting
        limit_conn conn_limit_per_ip 20;

        # Health check endpoint (minimal rate limiting)
        location = /health {
            limit_req zone=health burst=5 nodelay;
            access_log off;
            
            proxy_pass http://api_backend/api/v1/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Search endpoints (stricter rate limiting)
        location ~* ^/api/v1/(search|properties) {
            limit_req zone=search burst=10 nodelay;
            limit_req_status 429;

            include /etc/nginx/conf.d/api_proxy.conf;
        }

        # Analytics endpoints (restricted access)
        location ~* ^/api/v1/(analytics|metrics) {
            limit_req zone=analytics burst=5 nodelay;
            limit_req_status 429;

            # Optional: Restrict access to internal IPs
            # allow 10.0.0.0/8;
            # allow 172.16.0.0/12;
            # allow 192.168.0.0/16;
            # deny all;

            include /etc/nginx/conf.d/api_proxy.conf;
        }

        # General API endpoints
        location /api/ {
            limit_req zone=api burst=15 nodelay;
            limit_req_status 429;

            include /etc/nginx/conf.d/api_proxy.conf;
        }

        # Static files with caching
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Security for static files
            location ~* \.(js|css)$ {
                add_header Content-Security-Policy "default-src 'self'" always;
            }
        }

        # Robots.txt
        location = /robots.txt {
            alias /app/static/robots.txt;
            access_log off;
        }

        # Favicon
        location = /favicon.ico {
            alias /app/static/favicon.ico;
            access_log off;
            expires 1y;
        }

        # Block access to sensitive files
        location ~* \.(env|ini|log|bak|tmp)$ {
            deny all;
            return 404;
        }

        # Block access to hidden files
        location ~ /\. {
            deny all;
            return 404;
        }

        # Default location
        location / {
            return 301 /api/v1/;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}